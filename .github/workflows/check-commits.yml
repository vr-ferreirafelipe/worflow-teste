name: Check Commit

on:
  workflow_call:
    secrets:
      VR_PACKAGE_TOKEN:
        required: true
    outputs:
      commit_message:
        description: "Armazena as messagens de novos commits"
        value: ${{ jobs.check-commit.outputs.commit_message }}
      has_changes:
        description: "Verifica se existem novos commits"
        value: ${{ jobs.check-commit.outputs.has_changes }}

jobs:
  check-commit:
    name: Check Commit
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.check_changes.outputs.has_changes }}
      commit_message: ${{ steps.get_commit.outputs.commit_message }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.VR_PACKAGE_TOKEN }}
          fetch-depth: 0
          ref: main

      - name: Check Changes
        id: check_changes
        run: |
          # Obtenha a quantidade de novos commits
          COMMIT_COUNT=$(git rev-list $(git describe --tags --abbrev=0 @^)..@ --count)

          # Set output has_changes com true ou false
          echo "::set-output name=has_changes::$([ "$COMMIT_COUNT" -gt 0 ] && echo "true" || echo "false")"

      - name: Get Commit Messages
        id: get_commit
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          # Obtenha as mensagens de commit desde o Ãºltimo tag
          # COMMIT_MESSAGES=$(git log $(git describe --tags --abbrev=0 @^)..@ --pretty=format:%B)
          COMMIT_MESSAGES=$(git log $(git describe --tags --abbrev=0 @^)..@ --pretty=format:%B | tr '\n' '|')

          # Set output commit_message
          echo "::set-output name=commit_message::$COMMIT_MESSAGES"
