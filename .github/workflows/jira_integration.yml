name: Jira

on:
  workflow_call:
    secrets:
      VR_PACKAGE_TOKEN:
        required: true
      JIRA_BASE_URL:
        required: true
      JIRA_USER_EMAIL:
        required: true
      JIRA_API_TOKEN:
        required: true
    inputs:
      JIRA_ISSUE_PREFIX:
        required: true
        type: string
      COMMIT_MESSAGES:
        required: true
        type: string

jobs:

  get-task:
    # name: Get taks on jira
    runs-on: ubuntu-latest

    steps:
    - name: Check Issue in commit message
      id: check_issue_key
      run: |
        COMMIT_MESSAGES="${{ inputs.COMMIT_MESSAGES }}"

        # Encontra nas mensagens de commits as tarefas referenciadas.
        ALL_ISSUE_KEYS=$(echo "$COMMIT_MESSAGES" | grep -o '${{ inputs.JIRA_ISSUE_PREFIX }}-[0-9]\+')
        
        # Remove resultados diplicados
        DISTINCT_ISSUE_KEYS=$(echo "$ALL_ISSUE_KEYS" | sort | uniq)

        if [ -n "$DISTINCT_ISSUE_KEYS" ]; then
          echo "::set-output name=ISSUE_KEYS::$DISTINCT_ISSUE_KEYS"
        else
          echo "Nenhuma tarefa foi referencia nos ultimos commits."
        fi

    - name: Fetch Jira Issue
      id: fetch_jira_issue
      if: steps.check_issue_key.outputs.ISSUE_KEYS
      run: |
        # Recupere as variáveis de ambiente
        JIRA_USERNAME=${{ secrets.JIRA_USER_EMAIL }}
        JIRA_API_TOKEN=${{ secrets.JIRA_API_TOKEN }}
        JIRA_BASE_URL=${{ secrets.JIRA_BASE_URL }}

        # Definir os compos jira
        JIRA_FIELDS="summary,customfield_10037"

        ISSUE_KEYS=${{ steps.check_issue_key.outputs.ISSUE_KEYS }}

        for ISSUE_KEY in $ISSUE_KEYS; do
          # Busca tarefa pelo JIRA API.
          ISSUE_JSON=$(curl -s -u $JIRA_USERNAME:$JIRA_API_TOKEN \
            -X GET "$JIRA_BASE_URL/rest/api/2/issue/$ISSUE_KEY?fields=$JIRA_FIELDS")

          echo "::set-output name=TITLE::$(echo $ISSUE_JSON | jq -r '.fields.summary')"
          echo "::set-output name=DOC_INFO::$(echo $ISSUE_JSON | jq -r '.fields.customfield_10037')"
        done

    - name: ECHO Jira Issue
      run: |
        TITLE="${{ steps.fetch_jira_issue.outputs.TITLE }}"
        DOC_INFO="${{ steps.fetch_jira_issue.outputs.DOC_INFO }}"

        echo "$TITLE"
        echo "$DOC_INFO"

    - name: Alter description
      run: |
        TITLE="${{ steps.fetch_jira_issue.outputs.TITLE }}"
        DOC_INFO="${{ steps.fetch_jira_issue.outputs.DOC_INFO }}"

        ISSUE_KEYS=${{ steps.check_issue_key.outputs.ISSUE_KEYS }}


        for ISSUE_KEY in $ISSUE_KEYS; do
          # Altera a descricao da tarefa pelo JIRA API.
          curl -u $JIRA_USERNAME:$JIRA_API_TOKEN \
              -X PUT "$JIRA_BASE_URL/rest/api/2/issue/$JIRA_ISSUE_KEY" \
              -H "Content-Type: application/json" \
              --data '{
                "fields": {
                  "description": "${TITLE} (RELEASE Version)"
                }
              }'
        done
        
    #     - name: Checkout
    #       uses: actions/checkout@v3

    #     - name: Login
    #       uses: atlassian/gajira-login@master
    #       env:
    #         JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
    #         JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
    #         JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

        # - name: Setup
        #   uses: atlassian/gajira-cli@v3
        #   with:
        #     version: 1.0.27

        # - name: Find in commit messages
        #   uses: atlassian/gajira-find-issue-key@v3
        #   with:
        #     from: branch

        # - name: Create TODO
        #   uses: atlassian/gajira-todo@v3
        #   with:
        #     project: MC
        #     issuetype: Task
        #     description: Created automatically via GitHub Actions
        #   env:
        #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # - name: Transition issue
        #   uses: atlassian/gajira-transition@master
        #   with:
        #     issue: ${{ steps.create.outputs.issue }}
        #     transition: "In Progress"

        # - name: Exibir Descrição Capturada
        #   run: |
        #     jira view MOB-1094 -t debug
        #     # echo "A descrição da tarefa Jira é: ${{ steps.capture-description.outputs.issueDescription }}"
