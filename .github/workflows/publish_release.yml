name: Publish Release

on:
  workflow_dispatch:

jobs:
  check-commit:
    name: Check Commit
    uses: vrsoftbr/reusable-workflows/.github/workflows/check-commit.yml@inovar
    secrets:
      VRPACKAGETOKEN: ${{ secrets.VRPACKAGETOKEN }}

  run_check_changes:
    name: Run check changes
    uses: vrsoftbr/vrmobilereusableworkflows/.github/workflows/check-changes.yml
    secrets:
      VR_PACKAGE_TOKEN: ${{ secrets.VRPACKAGETOKEN }}

  run_generate_release_tag:
    name: Run generate new release
    uses: ./.github/workflows/generate-release-tag.yaml
    
    needs: run_check_changes
    if: needs.run_check_changes.outputs.HAS_CHANGES
    
    secrets:
      VR_PACKAGE_TOKEN: ${{ secrets.VRPACKAGETOKEN }}
    with:
      LAST_VERSION: ${{ needs.run_check_changes.outputs.LAST_VERSION }}
      COMMIT_MESSAGES: ${{ needs.run_check_changes.outputs.COMMIT_MESSAGES }} 

  # publish_release:
  #   name: Publicar nova versão
  #   needs: 
  #     - run_check_changes
  #     - run_generate_release_tag
  #   if: github.ref == 'refs/heads/main' && needs.run_check_changes.outputs.HAS_CHANGES && needs.run_generate_release_tag.outputs.HAS_NEW_RELEASE

  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         token: ${{ secrets.VRPACKAGETOKEN }}
  #         fetch-depth: 0
  #         ref: main

  #     - name: Git Config
  #       run: git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com" && git config --global user.name "${GITHUB_ACTOR}"

  #     - name: Upgrade release on packages
  #       id: upgrade_release_package
  #       run: |
  #         HAS_NEW_RELEASE=${{ needs.run_generate_release_tag.outputs.HAS_NEW_RELEASE }}
  #         NEW_VERSION=${{ needs.run_generate_release_tag.outputs.NEW_VERSION }}

  #         npm --no-git-tag-version version $NEW_VERSION
  #         git add . 
  #         git commit -m "ci: Entrega da versão $NEW_VERSION"
  #         git push

  #     - name: Publish Release
  #       id: publish_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.VRPACKAGETOKEN }}
  #       with:
  #         tag_name: v${{ needs.run_generate_release_tag.outputs.NEW_VERSION }}
  #         release_name: Release v${{ needs.run_generate_release_tag.outputs.NEW_VERSION }}
  #         commitish: main

  run_jira_integration:
    name: Run Jira Integration
    uses: ./.github/workflows/jira_integration.yml
    needs: 
      - run_check_changes
      - run_generate_release_tag
      # - publish_release
    if: needs.run_check_changes.outputs.HAS_CHANGES && needs.run_generate_release_tag.outputs.HAS_NEW_RELEASE
    secrets:
      VR_PACKAGE_TOKEN: ${{ secrets.VRPACKAGETOKEN }}
      JIRA_BASE_URL: ${{ secrets.VRJIRAURL }}
      JIRA_USER_EMAIL: ${{ secrets.VRJIRAEMAIL }}
      JIRA_API_TOKEN: ${{ secrets.VRJIRAAPITOKEN }}
    with:
      JIRA_ISSUE_PREFIX: 'MOB'
      COMMIT_MESSAGES: ${{ needs.run_check_changes.outputs.COMMIT_MESSAGES }} 
      NEW_VERSION: ${{ needs.run_generate_release_tag.outputs.NEW_VERSION }} 
      HAS_NEW_RELEASE: ${{ needs.run_generate_release_tag.outputs.HAS_NEW_RELEASE }} 

  run_release_notes:
    name: Run release notes
    uses: ./.github/workflows/release-notes.yml
    needs: 
      - run_check_changes
      - run_generate_release_tag
      # - publish_release
      - run_jira_integration
    if: needs.run_check_changes.outputs.HAS_CHANGES && needs.run_generate_release_tag.outputs.HAS_NEW_RELEASE
    secrets:
      VR_PACKAGE_TOKEN: ${{ secrets.VRPACKAGETOKEN }}
    with:
      GITHUB_REPOSITORY: $GITHUB_REPOSITORY
      NEW_VERSION: ${{ needs.run_generate_release_tag.outputs.NEW_VERSION }} 
      BUG_FIX_INFO: ${{ needs.run_jira_integration.outputs.BUG_FIX_INFO }} 
      FEAT_INFO: ${{ needs.run_jira_integration.outputs.FEAT_INFO }} 
      BREAK_CHANGE_INFO: ${{ needs.run_jira_integration.outputs.BREAK_CHANGE_INFO }} 
      TEC_NOTE_INFO: ${{ needs.run_jira_integration.outputs.TEC_NOTE_INFO }} 
      JIRA_ISSUE_KEYS: ${{ needs.run_jira_integration.outputs.ISSUE_KEYS }} 